cbuffer cbuff0 : register(b0)
{
	float4 color;		// 色
	matrix viewproj;	// ビュープロジェクション行列
	matrix world;		// ワールド行列
	float3 cameraPos;	// カメラ座標
};

// 平行光源の数
static const int DIRLIGHT_NUM = 3;

struct DirLight
{
	float3 lightv;    // ライトへの方向の単位ベクトル
	float3 lightcolor;    // ライトの色(RGB)
	uint active;
};

// 点光源の数
static const int POINTLIGHT_NUM = 3;

struct PointLight
{
	float3 lightpos;	// ライト座標
	float3 lightcolor;	// ライトの色
	float3 lightatten;	// 距離減衰係数
	uint activ;
};

// スポットライトの数
static const int SPOTLIGHT_NUM = 3;

struct SpotLight
{
	float3 lightv;				// 光線方向の逆ベクトル
	float3 lightpos;			// ライト座標
	float3 lightcolor;			// ライトの色
	float3 lightatten;			// 距離減衰係数
	float2 lightfactoranglecos;	// 減衰角度のコサイン
	uint activ;
};

// 丸影の数
static const int CIRCLESHADOW_NUM = 1;

struct CircleShadow
{
	float3 dir;					// 投影方向の逆ベクトル
	float3 casterpos;			// キャスター座標
	float distancecasterlight;	// キャスターとライトの距離
	float3 atten;				// 距離減衰係数
	float2 factoranglecos;		// 減衰角度のコサイン
	uint activ;
};

cbuffer cbuff2 : register(b2)
{
	float3 ambientColor;
	DirLight dirLights[DIRLIGHT_NUM];
	PointLight pointLights[POINTLIGHT_NUM];
	SpotLight spotLights[SPOTLIGHT_NUM];
	CircleShadow circleShadows[CIRCLESHADOW_NUM];
}

cbuffer cbuff4 : register(b4)
{
	float3 m_ambient;	// アンビエント係数
	float3 m_diffuse;	// ディフューズ係数
	float3 m_specular;	// スペキュラー係数
	float m_alpha;	// アルファ
}

// ボーンの最大数
static const int MAX_BONES = 32;
cbuffer skinning:register(b3)
{
	matrix matSkinning[MAX_BONES];
}

// 頂点バッファの入力
struct VSInput
{
	float4 pos	  : POSITION;
	float3 normal : NORMAL;				// 法線
	float2 uv	  : TEXCOORD;			// テクスチャ座標
	uint4 boneIndices  : BONEINDICES;	// ボーンの番号
	float4 boneWeight : BONEWEIGHTS;	// ボーンのスキンウェイト
};

// 頂点シェーダーからピクセルシェーダーへのやり取りに使用する構造体
struct VSOutput
{
	float4 svpos  : SV_POSITION;	// システム用の頂点座標
	float4 worldpos : POSITION; // ワールド座標
	float3 normal : NORMAL;			// 法線ベクトル
	float2 uv	  : TEXCOORD;		// uv値
};

